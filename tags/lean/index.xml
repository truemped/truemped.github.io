<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Lean on all things considered...</title><link>https://truemped.github.io/tags/lean/</link><description>Recent content in Lean on all things considered...</description><generator>Hugo</generator><language>en</language><lastBuildDate>Tue, 22 Aug 2023 19:00:00 +0200</lastBuildDate><atom:link href="https://truemped.github.io/tags/lean/index.xml" rel="self" type="application/rss+xml"/><item><title>Trunk Based Development: Stop PR Reviews!</title><link>https://truemped.github.io/posts/2023/08/trunk-based-development/</link><pubDate>Tue, 22 Aug 2023 19:00:00 +0200</pubDate><guid>https://truemped.github.io/posts/2023/08/trunk-based-development/</guid><description>&lt;figure>
 &lt;img
 
 sizes="(min-width: 35em) 1200px, 100vw"
 
 srcset='
 
 https://truemped.github.io/posts/2023/08/trunk-based-development/dalle-1692718678518_hu13324139568549620146.webp 480w,
 
 https://truemped.github.io/posts/2023/08/trunk-based-development/dalle-1692718678518_hu5727416054547182420.webp 800w,
 
 
 
 
 '

 
 
 src="https://truemped.github.io/posts/2023/08/trunk-based-development/dalle-1692718678518_hu5727416054547182420.webp"
 

 
 alt="two people in front of a computer doing pair programming in the style of a picasso painting (DALLE)"/> &lt;figcaption>
 &lt;p>two people in front of a computer doing pair programming in the style of a picasso painting (DALLE)&lt;/p>
 &lt;/figcaption>
&lt;/figure>

&lt;p>Engineering effectiveness is a prominent topic.
Traditional Pull Request (PR) reviews show their limitations when it comes to efficiency, knowledge sharing, and delivering value.
Instead, trunk based development, coupled with methodologies such as pair and mob programming, are a superior process.
Along with the strategic utilization of feature flags, this methodology presents an alluring argument for a more agile and streamlined software delivery.
I want to describe the challenges posed by conventional PR reviews and show the benefits of doing things differently.&lt;/p></description></item><item><title>Cities of Software</title><link>https://truemped.github.io/posts/2022/03/cities-of-software/</link><pubDate>Wed, 30 Mar 2022 17:00:00 +0200</pubDate><guid>https://truemped.github.io/posts/2022/03/cities-of-software/</guid><description>&lt;figure>
 &lt;img
 
 sizes="(min-width: 35em) 1200px, 100vw"
 
 srcset='
 
 https://truemped.github.io/posts/2022/03/cities-of-software/adrian-schwarz-XS7q-baZrmE-unsplash_hu16804506669958721228.webp 480w,
 
 https://truemped.github.io/posts/2022/03/cities-of-software/adrian-schwarz-XS7q-baZrmE-unsplash_hu2778795131166939905.webp 800w,
 
 https://truemped.github.io/posts/2022/03/cities-of-software/adrian-schwarz-XS7q-baZrmE-unsplash_hu6157307535233834437.webp 1200w,
 
 https://truemped.github.io/posts/2022/03/cities-of-software/adrian-schwarz-XS7q-baZrmE-unsplash_hu17564473676001689419.webp 1500w,
 '

 
 
 src="https://truemped.github.io/posts/2022/03/cities-of-software/adrian-schwarz-XS7q-baZrmE-unsplash_hu2778795131166939905.webp"
 

 
 alt="Photo by Adrian Schwarz on Unsplash"/> &lt;figcaption>
 &lt;p>Photo by &lt;a href="https://unsplash.com/@aeschwarz" class="external-link" target="_blank" rel="noopener">Adrian Schwarz&lt;/a> on &lt;a href="https://unsplash.com/photos/XS7q-baZrmE" class="external-link" target="_blank" rel="noopener">Unsplash&lt;/a>&lt;/p>
 &lt;/figcaption>
&lt;/figure>

&lt;p>Cities are an interesting way to think about Software. Cities have foundations,
like infrastructure for cars, electricity. Housing for people to live and work.
Stores to sell and buy goods. Also, Cities are often referred to as an
&lt;em>organism&lt;/em>. Just like a large organization, a department, or a team are an
&lt;em>organism&lt;/em>. But these organisms are building software.&lt;/p></description></item><item><title>Limiting Work In Progress</title><link>https://truemped.github.io/posts/2020/10/limiting-wip/</link><pubDate>Tue, 13 Oct 2020 10:00:00 +0200</pubDate><guid>https://truemped.github.io/posts/2020/10/limiting-wip/</guid><description>&lt;blockquote>
&lt;p>&lt;strong>Update&lt;/strong>: This post was trending on Hackernews in April 2021. See the
&lt;a href="https://news.ycombinator.com/item?id=26759903" class="external-link" target="_blank" rel="noopener">discussion&lt;/a>.&lt;/p>
&lt;/blockquote>
&lt;p>In many organizations today there is one thing that almost always is true: there
are too many things done in parallel, there is too much &lt;em>work-in-progress&lt;/em>,
everyone is busy but nothing gets done. If this is so ubiquitous why is no one
doing anything about it? Are people not aware or do they not know how to fix it?
This is so predominant, that it almost is too easy to just claim:&lt;/p></description></item></channel></rss>