<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Elasticsearch on all things considered...</title>
    <link>https://truemped.github.io/tags/elasticsearch/</link>
    <description>Recent content in Elasticsearch on all things considered...</description>
    <generator>Hugo</generator>
    <language>en</language>
    <lastBuildDate>Mon, 13 Apr 2020 17:00:00 +0200</lastBuildDate>
    <atom:link href="https://truemped.github.io/tags/elasticsearch/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Campaigns in Elasticsearch</title>
      <link>https://truemped.github.io/posts/2020/04/campaigns-in-elasticsearch/</link>
      <pubDate>Mon, 13 Apr 2020 17:00:00 +0200</pubDate>
      <guid>https://truemped.github.io/posts/2020/04/campaigns-in-elasticsearch/</guid>
      <description>&lt;p&gt;In e-commerce search enabling dynamic prices or campaigns requires some&#xA;attributes to be more volatile than others. A discount on Black Friday that is&#xA;should only be valid between 7 PM and midnight. The flags that promote the&#xA;discount. The teasers on product listings showing what products will have a&#xA;discount, before the discount is in effect. Products that are only discounted&#xA;for a certain customer group.&lt;/p&gt;&#xA;&lt;p&gt;Traditionally this is solved by updating the documents in the search index.&#xA;Around the time new information has to go live, all affected documents are&#xA;updated. There are at least two huge problems with this approach. The first one&#xA;is that updating a large portion of the index takes time. During large sales&#xA;events this easily means updating the whole index. Sometimes more than once if&#xA;your intake pipelines contain loops, e.g. This creates a huge load onto the&#xA;system which at this point can already have a lot of users looking for the deals&#xA;to become active. User facing errors are the last thing you would tolerate at&#xA;that time.&lt;/p&gt;</description>
    </item>
    <item>
      <title>Elasticsearch DSL-DSL</title>
      <link>https://truemped.github.io/posts/2015/07/elastic-dsl/</link>
      <pubDate>Wed, 29 Jul 2015 10:19:47 +0100</pubDate>
      <guid>https://truemped.github.io/posts/2015/07/elastic-dsl/</guid>
      <description>&lt;p&gt;Elasticsearch is a search server based on Apache Lucene. As a developer it is&#xA;easy to use, has an expressive query DSL and all is based on JSON&#xA;serialization. Often though I find myself in a position where I need to adapt&#xA;queries frequently and non-trivially, say in a demonstration in front of&#xA;customers or product owners.&lt;/p&gt;&#xA;&lt;p&gt;The questions are mostly similar: &amp;ldquo;what if I also filter for X&amp;rdquo;, &amp;ldquo;how does the&#xA;ranking change, when I add a freshness function&amp;rdquo;, &amp;ldquo;do I get a better result if&#xA;I boost document types Y&amp;rdquo; and so on. While these are easy to add, two things&#xA;bother me: first, I need to come up with the queries during a presentation,&#xA;which adds pauses to the meetings. When I&amp;rsquo;m finished with the query the&#xA;discussion has evolved. Second, I don&amp;rsquo;t want to be the enabler. If they can&#xA;find out what they want without me it also means a faster feedback loop for&#xA;them. In brainstorming sessions it is easy to focus on arguments and skip the&#xA;sometimes lengthy query finding pauses. Win win for everyone it seems.&lt;/p&gt;</description>
    </item>
  </channel>
</rss>
